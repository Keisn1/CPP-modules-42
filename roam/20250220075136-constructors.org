:PROPERTIES:
:ID:       5a5767d3-c89d-4179-8839-ebffbf58b96e
:END:
#+title: Constructors
#+date: [2025-02-20 Thu 07:51]
#+startup: overview

[[pdf:~/workspace/CPP-modules-42/The_C++_Programming_Language_4th_Edition_Bjarne_Stroustrup.pdf::471++0.00][The_C++_Programming_Language_4th_Edition_Bjarne_Stroustrup.pdf: Page 471]]
- has the same name as the class itself
  #+begin_src cpp
class Date {
private:
	int d, m, y;
public:
	Date(int dd, int mm, int yy); // constructor
}
  #+end_src

- *when a class has a constructor*, all objects will be initialized by a constructor call
  - arguments must be applied
  - we can use initializer notation
    - is more explicit about what is being done
  - throws error if the initializer is missing
    - it would work with structs though
      #+begin_src cpp
    Date today = Date (20, 2, 2025)
    Date today(20, 2, 2025)
    Date today;						// error: initializer missing
    Date today = Date {20, 2, 2025};
      #+end_src

- can be overloaded
  #+begin_src cpp
class Date {
	int d, m, y;
public:
// ...
	Date(int, int, int); // day, month, year
	Date(int, int); // day, month, today’s year
	Date(int); // day, today’s month and year
	Date(); // default Date: today
	Date(const char∗); // date in string representation
};
  #+end_src
